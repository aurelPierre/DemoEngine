name: "CodeQL"

on: ["push", "pull_request"]

jobs:
  analyze:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Analyse", artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
        language: ['cpp']


    steps:
    - name: Checkout reposistory
      uses: actions/checkout@master

    - name: Checkout submodules
      run: |
        sed -i'.back' 's/git@github.com:/https:\/\/github.com\//' .gitmodules
        git submodule update --init --recursive

    - name: Download Ninja and CMake
      uses: lukka/get-cmake@latest

    - name: Install missing package
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y libxrandr-dev libx11-xcb-dev libxinerama-dev libxcursor-dev libxi-dev libxml2-utils

    - name: Cache vulkan
      uses: actions/cache@v2
      id: cache-vulkan
      with:
        path: ${{ env.install_vulkan_sdk }}
        key: Vk-${{ runner.os }}-${{ env.install_vulkan_version }}

    - name: Install Vulkan SDK
      if: steps.cache-vulkan.outputs.cache-hit != 'true'
      shell: bash
      run: |
        # Download Vulkan SDK
        curl -LS -o vulkansdk.tar.gz https://sdk.lunarg.com/sdk/download/${{ env.install_vulkan_version }}/linux/vulkansdk-linux-x86_64-${{ env.install_vulkan_version }}.tar.gz
        # Create Vulkan SDK directory and extract
        mkdir -p "${{ env.install_vulkan_sdk }}"
        tar xfz vulkansdk.tar.gz -C "${{ env.install_vulkan_sdk }}"

    - name: Configure
      shell: bash
      run: |
        export CC=${{ matrix.config.cc }}
        export CXX=${{ matrix.config.cxx }}
        export VULKAN_SDK="${{ env.install_vulkan_sdk }}/${{ env.install_vulkan_version }}/x86_64"
        export PATH=$VULKAN_SDK/bin:$PATH
        export LD_LIBRARY_PATH=$VULKAN_SDK/lib:$LD_LIBRARY_PATH
        export VK_LAYER_PATH=$VULKAN_SDK/etc/explicit_layer.d

        cmake -S . -B build -D CMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -G Ninja
      
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main
        setup-python-dependencies: false 

    - name: Compile instrumented
      shell: cmake -P {0}
      run: |
        set(ENV{NINJA_STATUS} "[%f/%t %o/sec] ")

        include(ProcessorCount)
        ProcessorCount(N)

        execute_process(
          COMMAND cmake --build build -j ${N}
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1